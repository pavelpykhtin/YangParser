module-stmt         = optsep module-keyword sep identifier-arg-str
                         optsep
                         "{" stmtsep
                             linkage-stmts
                             body-stmts
                         "}" optsep

submodule-stmt      = optsep submodule-keyword sep identifier-arg-str
                     optsep
                     "{" stmtsep
                         submodule-header-stmts
                         linkage-stmts
                         meta-stmts
                         revision-stmts
                         body-stmts
                     "}" optsep

submodule-header-stmts =
                     // these stmts can appear in any order
                     yang-version-stmt
                     belongs-to-stmt

linkage-stmts       = // these stmts can appear in any order
                     *import-stmt
                     *include-stmt

body-stmts          = *(augment-stmt /
                       deviation-stmt)

import-stmt         = import-keyword sep identifier-arg-str optsep
                     "{" stmtsep
                         // these stmts can appear in any order
                         prefix-stmt
                         [revision-date-stmt]
                         [description-stmt]
                         [reference-stmt]
                     "}" stmtsep
                     
include-stmt        = include-keyword sep identifier-arg-str optsep
                     (";" /
                      "{" stmtsep
                          // these stmts can appear in any order
                          [revision-date-stmt]
                          [description-stmt]
                          [reference-stmt]
                      "}") stmtsep

belongs-to-stmt     = belongs-to-keyword sep identifier-arg-str
                     optsep
                     "{" stmtsep
                         prefix-stmt
                     "}" stmtsep
  
  deviation-stmt      = deviation-keyword sep
                        deviation-arg-str optsep
                        "{" stmtsep
                            // these stmts can appear in any order
                            [description-stmt]
                            [reference-stmt]
                            (deviate-not-supported-stmt /
                              1*(deviate-add-stmt /
                                 deviate-replace-stmt /
                                 deviate-delete-stmt))
                        "}" stmtsep

  deviation-arg-str   = < a string that matches the rule >
                        < deviation-arg >

  deviation-arg       = absolute-schema-nodeid

  deviate-not-supported-stmt =
                        deviate-keyword sep
                        not-supported-keyword-str stmtend

  deviate-add-stmt    = deviate-keyword sep add-keyword-str optsep
                        (";" /
                         "{" stmtsep
                             // these stmts can appear in any order
                             [units-stmt]
                             *must-stmt
                             *unique-stmt
                             *default-stmt
                             [config-stmt]
                             [mandatory-stmt]
                             [min-elements-stmt]
                             [max-elements-stmt]
                         "}") stmtsep

  deviate-delete-stmt = deviate-keyword sep delete-keyword-str optsep
                        (";" /
                         "{" stmtsep
                             // these stmts can appear in any order
                             [units-stmt]
                             *must-stmt
                             *unique-stmt
                             *default-stmt
                         "}") stmtsep


  deviate-replace-stmt = deviate-keyword sep replace-keyword-str optsep
                        (";" /
                         "{" stmtsep
                             // these stmts can appear in any order
                             [type-stmt]
                             [units-stmt]
                             [default-stmt]
                             [config-stmt]
                             [mandatory-stmt]
                             [min-elements-stmt]
                             [max-elements-stmt]
                         "}") stmtsep

  not-supported-keyword-str = < a string that matches the rule >
                              < not-supported-keyword >

  add-keyword-str     = < a string that matches the rule >
                        < add-keyword >

  delete-keyword-str  = < a string that matches the rule >
                        < delete-keyword >

  replace-keyword-str = < a string that matches the rule >
                        < replace-keyword >

  // represents the usage of an extension
  unknown-statement   = prefix ":" identifier [sep string] optsep
                        (";" /
                         "{" optsep
                             *((yang-stmt / unknown-statement) optsep)
                          "}") stmtsep

  yang-stmt           = action-stmt /
                        anydata-stmt /
                        anyxml-stmt /
                        argument-stmt /
                        augment-stmt /
                        base-stmt /
                        belongs-to-stmt /
                        bit-stmt /
                        case-stmt /
                        choice-stmt /
                        config-stmt /
                        contact-stmt /
                        container-stmt /
                        default-stmt /
                        description-stmt /
                        deviate-add-stmt /
                        deviate-delete-stmt /
                        deviate-not-supported-stmt /
                        deviate-replace-stmt /
                        deviation-stmt /
                        enum-stmt /
                        error-app-tag-stmt /
                        error-message-stmt /
                        extension-stmt /
                        feature-stmt /
                        fraction-digits-stmt /
                        grouping-stmt /
                        identity-stmt /
                        if-feature-stmt /
                        import-stmt /
                        include-stmt /
                        input-stmt /
                        key-stmt /
                        leaf-list-stmt /
                        leaf-stmt /
                        length-stmt /
                        list-stmt /
                        mandatory-stmt /
                        max-elements-stmt /
                        min-elements-stmt /
                        modifier-stmt /
                        module-stmt /
                        must-stmt /
                        namespace-stmt /
                        notification-stmt /
                        ordered-by-stmt /
                        organization-stmt /
                        output-stmt /
                        path-stmt /
                        pattern-stmt /
                        position-stmt /
                        prefix-stmt /
                        presence-stmt /
                        range-stmt /
                        reference-stmt /
                        refine-stmt /
                        require-instance-stmt /
                        revision-date-stmt /
                        revision-stmt /
                        rpc-stmt /
                        status-stmt /
                        submodule-stmt /
                        typedef-stmt /
                        type-stmt /
                        unique-stmt /
                        units-stmt /
                        uses-augment-stmt /
                        uses-stmt /
                        value-stmt /
                        when-stmt /
                        yang-version-stmt /
                        yin-element-stmt

  // Ranges

  range-arg-str       = < a string that matches the rule >
                        < range-arg >

  range-arg           = range-part *(optsep "|" optsep range-part)

  range-part          = range-boundary
                        [optsep ".." optsep range-boundary]

  range-boundary      = min-keyword / max-keyword /
                        integer-value / decimal-value

  // Lengths

  length-arg-str      = < a string that matches the rule >
                        < length-arg >

  length-arg          = length-part *(optsep "|" optsep length-part)

  length-part         = length-boundary
                        [optsep ".." optsep length-boundary]

  length-boundary     = min-keyword / max-keyword /
                        non-negative-integer-value

  // Schema Node Identifiers

  schema-nodeid       = absolute-schema-nodeid /
                        descendant-schema-nodeid

  absolute-schema-nodeid = 1*("/" node-identifier)

  descendant-schema-nodeid =
                        node-identifier
                        [absolute-schema-nodeid]

  // Instance Identifiers

  instance-identifier = 1*("/" (node-identifier
                                [1*key-predicate /
                                 leaf-list-predicate /
                                 pos]))

  key-predicate       = "[" *WSP key-predicate-expr *WSP "]"

  key-predicate-expr  = node-identifier *WSP "=" *WSP quoted-string

  leaf-list-predicate = "[" *WSP leaf-list-predicate-expr *WSP "]"

  leaf-list-predicate-expr = "." *WSP "=" *WSP quoted-string

  pos                 = "[" *WSP positive-integer-value *WSP "]"

  current-function-invocation = current-keyword *WSP "(" *WSP ")"
